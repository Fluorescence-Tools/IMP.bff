stages:
  - build
  - test
  - deploy

.build_lnx: &build_linux
  stage: build
  script:
    - git config --global --add safe.directory /builds/imp/bff
    - git submodule update --init --recursive --remote
    - cp tools/conda_build_config.yaml ./conda-recipe/
    - conda mambabuild conda-recipe --output-folder bld-dir
  artifacts:
    paths:
      - bld-dir/
build:lnx_x86_64:
  <<: *build_linux
  image: condaforge/linux-anvil-cuda:11.7
  tags:
    - x86_64

build:windows:
  stage: build
  tags:
    - win
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - ./tools/build.bat
  artifacts:
    paths:
      - bld-dir/

build:osx:
  stage: build
  tags:
    - osx
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - ./tools/build.sh
  artifacts:
    paths:
      - bld-dir/

test:linux:
  stage: test
  tags:
    - linux
  image: condaforge/mambaforge
  needs: ["build:lnx_x86_64"]
  script:
    - source activate base
    - conda config --add channels "file://`pwd`/bld-dir"
    - mamba install python im.bff nose numba
    - nosetests test

deploy:conda:
  stage: deploy
  image: condaforge/mambaforge
  tags:
    - linux
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - source activate
    - mamba install anaconda-client
    - if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then DEPLOY_LABEL=main; else DEPLOY_LABEL=nightly; fi
    - anaconda -t ${ANACONDA_API_TOKEN} upload -l ${DEPLOY_LABEL} -u ${CONDA_USER} --force bld-dir/**/*.tar.bz2
