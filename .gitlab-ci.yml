stages:
  - build
  - test
  - deploy

.build_posix: &build_posix
  stage: build
  script:
    - git submodule update --init --recursive --remote
    - ./tools/build.sh
  artifacts:
    paths:
      - bld-dir/
.build:cf: &build_cf
  <<: *build_posix
  before_script:
    - source "/opt/conda/etc/profile.d/conda.sh"
    - conda activate /opt/conda/
    - git submodule update --init --recursive --remote
build:cf_x86:
  <<: *build_cf
  image:
    name: condaforge/linux-anvil-cos7-x86_64
    entrypoint: [ "/bin/bash", "-i", "-c" ]
  tags:
    - x86_64
build:cf_ppc64le:
  <<: *build_cf
  image:
    name: condaforge/linux-anvil-ppc64le
    entrypoint: [ "/bin/bash", "-i", "-c" ]
  tags:
    - ppc64le
build:cf_aarch64:
  <<: *build_cf
  image:
    name: condaforge/linux-anvil-aarch64
    entrypoint: [ "/bin/bash", "-i", "-c" ]
  tags:
    - aarch64
build:osx:
  <<: *build_posix
  tags:
    - osx

build:windows:
  stage: build
  tags:
    - win
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - ./tools/build.bat
  artifacts:
    paths:
      - bld-dir/


test:linux:
  stage: test
  tags:
    - linux
  image: condaforge/mambaforge
  needs: ["build:lnx_x86_64"]
  script:
    - source activate base
    - conda config --add channels "file://`pwd`/bld-dir"
    - mamba install python imp.bff nose numba numpy
    - nosetests test

deploy:conda:
  stage: deploy
  image: condaforge/mambaforge
  tags:
    - linux
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - source activate
    - mamba install anaconda-client
    - if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then DEPLOY_LABEL=main; else DEPLOY_LABEL=nightly; fi
    - anaconda -t ${ANACONDA_API_TOKEN} upload -l ${DEPLOY_LABEL} -u ${CONDA_USER} --force bld-dir/**/*.tar.bz2
