stages:
  - build
  - test
  - deploy

.build_psx: &build_psx
  stage: build
  script:
    - git submodule update --init --recursive --remote
    - ./tools/build.sh
  artifacts:
    paths:
      - bld-dir/
build:lnx_x86_64:
  <<: *build_psx
  image: condaforge/linux-anvil-comp7
  tags:
    - x86_64
build:lnx_ppc64le:
  <<: *build_psx
  image: condaforge/linux-anvil-ppc64le
  tags:
    - ppc64le
build:lnx_aarch64:
  <<: *build_psx
  image: condaforge/linux-anvil-aarch64
  tags:
    - aarch64
build:osx:
  <<: *build_psx
  tags:
    - osx

build:windows:
  stage: build
  tags:
    - win
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - ./tools/build.bat
  artifacts:
    paths:
      - bld-dir/


test:linux:
  stage: test
  tags:
    - linux
  image: condaforge/mambaforge
  needs: ["build:lnx_x86_64"]
  script:
    - source activate base
    - conda config --add channels "file://`pwd`/bld-dir"
    - mamba install python imp.bff nose numba numpy
    - nosetests test

deploy:conda:
  stage: deploy
  image: condaforge/mambaforge
  tags:
    - linux
  before_script:
    - git submodule update --init --recursive --remote
  script:
    - source activate
    - mamba install anaconda-client
    - if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then DEPLOY_LABEL=main; else DEPLOY_LABEL=nightly; fi
    - anaconda -t ${ANACONDA_API_TOKEN} upload -l ${DEPLOY_LABEL} -u ${CONDA_USER} --force bld-dir/**/*.tar.bz2
