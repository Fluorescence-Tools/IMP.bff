# Autogenerated by tools/build/setup_cmake.py
# from tools/build/cmake_templates/ModuleSwig.cmake
# Do not edit - any changes will be lost!

add_definitions(-DIMP_SWIG_WRAPPER)
add_definitions(-DRMF_SWIG_WRAPPER)

# Suppress modern gcc warnings about a lot of autogenerated SWIG code
# Note that some warnings can be turned off with pragmas
# (see modules/kernel/pyext/include/IMP_kernel.compiler_warnings.i)
# but pragmas seem to be ignored for these particular warnings:
if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU")
  add_definitions("-Wno-unused-function")
  add_definitions("-Wno-unused-parameter")
  add_definitions("-Wno-missing-field-initializers")
  if (GCC_VERSION VERSION_GREATER 4.3)
    add_definitions("-Wno-maybe-uninitialized")
    add_definitions("-Wno-missing-declarations")
  endif()
  if (GCC_VERSION VERSION_GREATER 8.0)
    add_definitions("-Wno-stringop-overflow")
  endif()
endif()

include_directories(${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${HDF5_INCLUDE_PATH}
        ${NUMPY_INCLUDE_PATH}
        ${PYTHON-IHM_INCLUDE_PATH})
link_directories(${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${HDF5_LINK_PATH}
        ${NUMPY_LINK_PATH}
        ${PYTHON-IHM_LINK_PATH})

GET_DIRECTORY_PROPERTY(includes INCLUDE_DIRECTORIES)

# SWIG doesn't need Python.h in its own include path
include_directories(${PYTHON_INCLUDE_DIRS})

# this is needed for some reason that I don't understand
set(swig_path ${BOOST.FILESYSTEM_SWIG_PATH}
        ${BOOST.PROGRAMOPTIONS_SWIG_PATH}
        ${BOOST.RANDOM_SWIG_PATH}
        ${BOOST.SYSTEM_SWIG_PATH}
        ${CGAL_SWIG_PATH}
        ${HDF5_SWIG_PATH}
        ${NUMPY_SWIG_PATH}
        ${PYTHON-IHM_SWIG_PATH})
list(APPEND swig_path ${IMP_SWIG_PATH})

file(STRINGS "${CMAKE_BINARY_DIR}/src/bff_swig.deps" swigdeps)

set(wrap_py "${CMAKE_BINARY_DIR}/lib/IMP/bff/__init__.py")
set(wrap_py_orig "${CMAKE_BINARY_DIR}/src/bff_swig/IMP.bff.py")
set(source "${CMAKE_BINARY_DIR}/src/bff_swig/wrap.cpp"
                          "${CMAKE_BINARY_DIR}/src/bff_swig/wrap.h")

set(PATH_ARGS )
foreach(path ${includes})
  list(APPEND PATH_ARGS "--includepath=${path}")
endforeach(path)
foreach(path ${swig_path})
  list(APPEND PATH_ARGS "--swigpath=${path}")
endforeach(path)
add_custom_command(OUTPUT ${source} ${wrap_py} ${wrap_py_orig}
   COMMAND  ${PYTHON_EXECUTABLE}
            "/home/tpeulen/mambaforge/envs/py38/share/IMP/tools/build/make_swig_wrapper.py" "--include=/home/tpeulen/mambaforge/envs/py38/include" "--swig_include=/home/tpeulen/mambaforge/envs/py38/share/IMP/swig" "--swig_include=/home/tpeulen/mambaforge/envs/py38/share/IMP/swig"
            "--swig=${SWIG_EXECUTABLE}"
            "--module=bff"
            ${PATH_ARGS}
   DEPENDS ${swigdeps} ${IMP_bff_PYTHON_EXTRA_DEPENDENCIES}
   WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
   COMMENT "Running SWIG on bff")

add_library(IMP.bff-python MODULE ${source})
# Apple linkers complain by default if there are undefined symbols
if(APPLE)
  set_target_properties(IMP.bff-python PROPERTIES LINK_FLAGS "-flat_namespace -undefined suppress")
endif(APPLE)

set_target_properties(IMP.bff-python PROPERTIES PREFIX ""
                      OUTPUT_NAME _IMP_bff)
set_property(TARGET "IMP.bff-python" PROPERTY FOLDER "IMP.bff")


if(WIN32 AND NOT CYGWIN)
  set_target_properties(IMP.bff-python PROPERTIES SUFFIX ".pyd")
endif()

target_link_libraries(IMP.bff-python
    IMP.bff-lib
    ${imp_bff_libs}
    ${IMP_SWIG_LIBRARIES}
  )

set(IMP_bff_PYTHON ${source} IMP.bff-python ${wrap_py} ${IMP_kernel_PYTHON}
${IMP_cgal_PYTHON}
${IMP_algebra_PYTHON}
${IMP_display_PYTHON}
${IMP_score_functor_PYTHON}
${IMP_core_PYTHON}
${IMP_container_PYTHON}
                   CACHE INTERNAL "" FORCE)

INSTALL(TARGETS IMP.bff-python DESTINATION ${CMAKE_INSTALL_PYTHONDIR})
INSTALL(FILES ${wrap_py} DESTINATION ${CMAKE_INSTALL_PYTHONDIR}/IMP/bff)
